<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
    	<artifactId>IRCT</artifactId>
    	<groupId>edu.harvard.hms.dbmi.bd2k.irct</groupId>
    	<version>1.4.1</version>
  	</parent>
    <artifactId>securetoken</artifactId>
    <packaging>war</packaging>
    <name>securetoken</name>
    <description>Simple CXF JAX-RS webapp service using spring configuration</description>
    <properties>
        <jackson.version>2.9.0</jackson.version>
        <wildfly-swarm.version>2017.9.4</wildfly-swarm.version>
        <docker.maven.plugin.version>0.21.0</docker.maven.plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Dockerfile configuration -->
        <docker.from>java:8-jdk-alpine</docker.from> 
        <docker.maven.plugin.version>0.13.5</docker.maven.plugin.version>
        <docker.assemblyDescriptorRef>artifact</docker.assemblyDescriptorRef>
        <!-- DTR -->
        <docker.image>dtr.avl.dbmi.hms.harvard.edu/dbmi/securetoken</docker.image>
      	<docker.registry>dtr.avl.dbmi.hms.harvard.edu</docker.registry>
      	<!-- local machine specific variables -->
      	<docker.host>tcp://192.168.99.100:2376</docker.host>
      	<docker.certpath>/Users/andre/.docker/machine/machines/default</docker.certpath>
      	<docker.dockerFileDir>/Users/andre/Documents/git/hackathon-Sept2017/build/securetoken</docker.dockerFileDir>
    </properties>
    <dependencies>
    	<dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
            <version>3.1.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-client</artifactId>
            <version>3.1.12</version>
            <scope>test</scope>
        </dependency>
       	<dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>${jackson.version}</version>
        </dependency> -->
 		<!--  <dependency>
    		<groupId>org.wildfly.swarm</groupId>
    		<artifactId>jackson</artifactId>
    		<version>${wildfly-swarm.version}</version>
		</dependency>  -->     
        <!--  <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>4.1.9.RELEASE</version>
        </dependency> -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
		    <groupId>com.auth0</groupId>
		    <artifactId>java-jwt</artifactId>
		    </dependency>
		<dependency>
		    <groupId>org.glassfish</groupId>
		    <artifactId>javax.json</artifactId>
		    <version>1.0.4</version>
		</dependency>
		<dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>jaxrs</artifactId>
            </dependency>
		<dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>cdi</artifactId>
            </dependency>
    </dependencies>
    <dependencyManagement>
 		<dependencies>
 			<dependency>
 			<groupId>org.wildfly.swarm</groupId>
 			<artifactId>bom</artifactId>
 			<version>${wildfly-swarm.version}</version>
 			<scope>import</scope>
 			<type>pom</type>
 			</dependency>
 		</dependencies>
	</dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration> 
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.wildfly.swarm</groupId>
                <artifactId>wildfly-swarm-plugin</artifactId>
                <version>${wildfly-swarm.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions> 
            </plugin>
            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                	<bundleDependencies>true</bundleDependencies>
                	<certPath>${docker.certpath}</certPath>             	
                    <images>
                        <image>
                            <name>${docker.image}</name>
                            <build>
                            	<cleanup>true</cleanup>
                            	<tags>
                            		<tag>${project.version}-dev</tag>
                            	</tags>
                                <from>${docker.from}</from>
                                <maintainer>andre_rosa@hms.harvard.edu</maintainer>
                                <ports>
                                    <port>8080</port>
                                    <port>8000</port>
                                </ports>
                                <entryPoint>
                                    <exec>
                                        <arg>java</arg>
										<arg>-Djava.net.preferIPv4Stack=true</arg>
										<arg>-Xdebug</arg>
										<arg>-Xnoagent</arg>
										<arg>-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000</arg>
                                        <arg>-jar</arg>
                                        <arg>/opt/wildfly-swarm/securetoken.jar</arg>
                                    </exec>
                                </entryPoint>
                                <assembly>
                                    <inline>
                                        <dependencySets>
                                            <dependencySet>
                                                <useProjectAttachments>true</useProjectAttachments>
                                                <includes>
                                                    <include>edu.harvard.hms.dbmi.bd2k.irct:securetoken:jar:swarm</include>
                                                </includes>
                                                <outputFileNameMapping>securetoken.jar</outputFileNameMapping>
                                            </dependencySet>
                                        </dependencySets>
                                    </inline>
                                    <basedir>/opt/wildfly-swarm</basedir>
                                </assembly>
                            </build>
                            <run>
                                <ports>
                                    <!-- Map container port 8080 to a dynamical port -->
                                    <port>${swarm.port}:8080</port>
                                    <port>8000:8000</port>
                                </ports>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${swarm.port}</url>
                                        <!-- Change this to 200 when the URL above hits an endpoint -->
                                        <status>200</status>
                                    </http>
                                    <time>30000</time>
                                </wait>
                                <log>
                                    <color>yellow</color>
                                    <prefix>SWARM</prefix>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
